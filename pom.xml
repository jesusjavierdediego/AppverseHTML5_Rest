<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.rest</groupId>
    <artifactId>restserver</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>
    <name>RestServer</name>

    <!-- ================================================================================ -->
    <!-- Common properties -->
    <!-- ================================================================================ -->
    <properties>
        <!-- Project properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.javaVersion>1.7</project.build.javaVersion>
        <!-- Dependencies -->
        <version.lib.jersey>1.17.1</version.lib.jersey>
        
        <outputPath>/opt/apps/deployments/</outputPath>
        <serviceAlias>blacksniper</serviceAlias>
    </properties>

    <!-- ================================================================================ -->
    <!-- Dependencies -->
    <!-- ================================================================================ -->
    <dependencies>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-bundle</artifactId>
            <version>${version.lib.jersey}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${version.lib.jersey}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>12.0</version>
        </dependency>
    </dependencies>

    <!-- ================================================================================ -->
    <!-- PLUGINS -->
    <!-- ================================================================================ -->

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${project.build.javaVersion}</source>
                    <target>${project.build.javaVersion}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.rest.server.rest.application.RestComponent</mainClass>
                                </transformer>
                            </transformers>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>${serviceAlias}</shadedClassifierName>
                            <finalName>restdemo</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jolokia</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.11.4</version>
                        <configuration>
                            <images>
                                <image>
                                    <!-- Image name and alias-->
                                    <alias>BlackSniper</alias>
                                    <name>restserver</name>
                                    <!-- Defines how the image is created. Base image, 
                                    build artifacts and their dependencies, ports to be exposed, 
                                    etc to be included in the image are specified here-->
                                    <build>
                                        <from>ingensi/oracle-jdk:centos6-8u45</from>
                                        <!-- Used to specify the artifacts to be included-->
                                        <assembly>
                                            <descriptor>assembly.xml</descriptor>
                                            <basedir>/</basedir>
                                        </assembly>
                                        <ports>
                                            <port>8000</port>
                                        </ports>
                                        <command>java -jar /opt/apps/deployments/restdemo.jar</command>
                                    </build>
                                    <run>
                                        <ports>
                                            <port>8000:8000</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker:build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>docker:start</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
